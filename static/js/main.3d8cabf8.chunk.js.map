{"version":3,"sources":["www/images/avatar.png","redux/dialog-reducer.js","components/Users/Users.module.css","components/Navbar/Navbar.module.css","Api/Api.js","reportWebVitals.js","components/Navbar/Navbar.js","components/Music/Music.js","components/News/News.js","components/Settings/Settings.js","components/Common/helpers.js","redux/users-reducer.js","components/Common/Utils/Paginator.js","components/Users/User.js","components/Users/Users.js","redux/users-selector.js","components/Users/UsersContainer.js","components/Header/Header.js","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","components/Login/LoginContainer.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","Hoc/suspenseLoading.js","App.js","index.js","www/images/preloader.gif","components/Common/Preloader/Preloader.js","components/Login/Login.module.css","components/Common/FormControls.js","redux/constants.js","components/Common/Utils/Validators.js","components/Common/Utils/Paginator.module.css","components/Header/Header.module.css","components/Common/FormControls.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","text","getMaxMessageId","state","reduce","max","message","newMessageActionCreator","newMessageText","type","ADD_MESSAGE","dialogReducer","action","newMessage","module","exports","axiosInstance","axios","withCredentials","baseURL","userApi","getUsers","page","pageSize","get","then","response","data","followUser","userId","post","unfollowUser","getUserProfile","updateUserStatus","status","put","saveUser","user","saveAvatar","file","formdata","FormData","append","headers","authApi","getAuthState","login","password","logout","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","css","nav","to","item","activeClassName","active","Music","News","Settings","changeStateProp","items","searchProp","itemId","newProp","map","users","currentPage","totalPageCount","paginatorPartSize","isLoading","followingUsersId","setUserFollowing","FOLLOW_USER","setUserUnfollowing","UNFOLLOW_USER","setUsers","SET_USERS","setUsersTotalCount","count","SET_USERS_TOTAL_COUNT","usersTotalCount","setUsersCurrentPage","SET_USERS_CURRENT_PAGE","setLoadingGif","flag","SET_LOADING_GIF_PAGE","setFollowingProcess","isFollowing","SET_FOLLOWING_PROCESS","usersReducer","a","followed","filter","Paginator","React","memo","totalItemsCount","setCurrentPage","pageCount","Math","ceil","pages","i","push","partCount","useState","partNumber","setPartNumber","leftItemNumber","rightItemNumber","onClick","pageNumber","e","User","src","photoUrl","avatar","userPhoto","Status","location","city","country","disabled","some","Users","u","getUsersSelector","usersPage","getCurrentPageSelector","getTotalPageCountSelector","getPageSizeSelector","getIsLoadingSelector","getFollowingUsersId","getPaginatorPartSize","UsersContainer","props","this","Preloader","PureComponent","connect","dispatch","resultCode","setPageFlag","result","totalCount","Header","header","loginBlock","isLogin","email","errorMessage","setAuthDataActionCreater","SET_LOGIN_DATA","authReducer","SET_LOGOUT","DELETE_AUTH_DATA","HeaderContainer","Component","auth","ReduxLoginForm","reduxForm","form","onSubmit","handleSubmit","inputLabelwhite","for","Field","component","Input","validate","required","error","errorBlock","Login","formData","LoginContainer","stopSubmit","_error","isInitialized","appReducer","SET_INITIALIZATION_DATA","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebarPage","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","SuspenseLoading","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initialize","path","render","TempAppComponent","withRouter","promises","Promise","all","MainAppComponent","StrictMode","ReactDOM","document","getElementById","getState","console","log","preloader","FormInput","input","meta","isError","touched","formControl","children","Textarea","restProps","ADD_POST","SET_PROFILE_INFO","UPDATE_USER_STATUS","SAVE_AVATAR","value","maxLengthCreator","maxLength","length","posts","likes","profileInfo","getMaxPostId","newPostActionCreator","newposttext","setUsersProfile","updateUserStatusActionCreater","imagePath","maxId","newPost"],"mappings":"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","file":"static/js/main.3d8cabf8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.32962620.png\";","import { ADD_MESSAGE } from './constants'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Dimych' },\r\n        { id: 2, name: 'Andrew' },\r\n        { id: 3, name: 'Sveta' },\r\n        { id: 4, name: 'Sasha' },\r\n        { id: 5, name: 'Viktor' },\r\n        { id: 6, name: 'Valera' }\r\n    ],\r\n    messages: [\r\n        { id: 1, text: 'Hi' },\r\n        { id: 2, text: 'How is your it-kamasutra?' },\r\n        { id: 3, text: 'Yo' },\r\n        { id: 4, text: 'Yo' },\r\n        { id: 5, text: 'Yo' }\r\n    ]\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            if (action.text !== '') {\r\n                let newMessage = {\r\n                    id: getMaxMessageId(state) + 1,\r\n                    text: action.text\r\n                }\r\n                return {\r\n                    ...state,\r\n                    messages: [...state.messages, newMessage]\r\n                }\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst getMaxMessageId = (state) => {\r\n    return state.messages.reduce((max, message) => message.id > max ? message.id : max,\r\n        state.messages[0].id);\r\n}\r\n\r\nexport const newMessageActionCreator = (newMessageText) => ({ type: ADD_MESSAGE, text: newMessageText})\r\n\r\nexport default dialogReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1Eszi\",\"currentPage\":\"Users_currentPage__25BYV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3wVRQ\",\"item\":\"Navbar_item__1oiZs\",\"active\":\"Navbar_active__3xbXc\"};","import * as axios from 'axios'\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://localhost:5001/'\r\n});\r\n\r\nexport const userApi = {\r\n    getUsers(page, pageSize) {\r\n        return axiosInstance.get(`users?page=${page}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    followUser(userId) {\r\n        return axiosInstance.post(`users/follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollowUser(userId) {\r\n        return axiosInstance.post(`users/unfollow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getUserProfile(userId) {\r\n        return axiosInstance.get(`users/${userId}`).then(response => response.data);\r\n    },\r\n    updateUserStatus(status) {\r\n        return axiosInstance.put('users/updatestatus', { status: status }).then(response => response.data);\r\n    },\r\n    saveUser(user) {\r\n        return axiosInstance.put('users', user).then(response => response.data);\r\n    },\r\n    saveAvatar(file) {\r\n        const formdata = new FormData();\r\n        formdata.append('image', file);\r\n\r\n        return axiosInstance.put('users/savephoto', formdata, {\r\n            headers: {\r\n                'Content-type' : 'multipart/form-data'\r\n            }\r\n        }).then(response => response.data);\r\n    }\r\n}\r\nexport const authApi = {\r\n    getAuthState() {\r\n        return axiosInstance.get('auth/status').then(response => response.data);\r\n    },\r\n    login(login, password) {\r\n        return axiosInstance.post('auth/login', {\r\n            login: login,\r\n            password: password,\r\n        }).then(response => response.data);\r\n    },\r\n    logout() {\r\n        return axiosInstance.delete(\"auth/logout\").then(response => response.data);\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { NavLink } from 'react-router-dom';\r\nimport css from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={css.nav}>\r\n            <div>\r\n                <NavLink to='/profile' className={css.item} activeClassName={css.active}>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/dialogs' className={css.item} activeClassName={css.active}>Dialogs</NavLink>\r\n            </div><div>\r\n                <NavLink to='/news' className={css.item} activeClassName={css.active}>News</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/music' className={css.item} activeClassName={css.active}>Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/settings' className={css.item} activeClassName={css.active}>Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/users' className={css.item} activeClassName={css.active}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import {css} from \"./Music.module.css\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music","import {css} from \"./News.module.css\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News","import {css} from \"./Settings.module.css\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings","export const changeStateProp = (items, searchProp, itemId, newProp) => {\r\n    return items.map((item) => {\r\n        if (item[searchProp] === itemId)\r\n            return {\r\n                ...item,\r\n                ...newProp\r\n            }\r\n        return item;\r\n    });\r\n}","import { UNFOLLOW_USER, FOLLOW_USER, SET_USERS, SET_USERS_TOTAL_COUNT, SET_USERS_CURRENT_PAGE, SET_LOADING_GIF_PAGE, SET_FOLLOWING_PROCESS } from './constants'\r\nimport { userApi } from '../Api/Api'\r\nimport { changeStateProp } from '../components/Common/helpers'\r\n\r\nlet initialState = {\r\n    users: [\r\n    ],\r\n    currentPage: 1,\r\n    totalPageCount: 0,\r\n    pageSize: 5,\r\n    paginatorPartSize: 10,\r\n    isLoading: false,\r\n    followingUsersId: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW_USER: {\r\n            const a = changeStateProp(state.users, \"id\", action.userId, {followed : true});\r\n            return {\r\n                ...state,\r\n                users: a\r\n            }\r\n        }\r\n        case UNFOLLOW_USER: {\r\n            const a = changeStateProp(state.users, \"id\", action.userId, {followed : false});\r\n            return {\r\n                ...state,\r\n                users: a\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalPageCount: action.usersTotalCount\r\n            }\r\n        }\r\n        case SET_USERS_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_LOADING_GIF_PAGE: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        }\r\n        case SET_FOLLOWING_PROCESS: {\r\n            return {\r\n                ...state,\r\n                followingUsersId: action.isFollowing\r\n                    ? [...state.followingUsersId, action.userId]\r\n                    : state.followingUsersId.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\nexport const setUserFollowing = (userId) => ({ type: FOLLOW_USER, userId: userId })\r\nexport const setUserUnfollowing = (userId) => ({ type: UNFOLLOW_USER, userId: userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users: users })\r\nexport const setUsersTotalCount = (count) => ({ type: SET_USERS_TOTAL_COUNT, usersTotalCount: count })\r\nexport const setUsersCurrentPage = (page) => ({ type: SET_USERS_CURRENT_PAGE, currentPage: page })\r\nexport const setLoadingGif = (flag) => ({ type: SET_LOADING_GIF_PAGE, isLoading: flag })\r\nexport const setFollowingProcess = (isFollowing, userId) => ({ type: SET_FOLLOWING_PROCESS, isFollowing, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize, setPageFlag = false) => async (dispatch) => {\r\n    if (setPageFlag)\r\n        dispatch(setUsersCurrentPage(currentPage));\r\n    dispatch(setLoadingGif(true));\r\n    let response = await userApi.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(setLoadingGif(false));\r\n    if (response.resultCode == 0) {\r\n        dispatch(setUsers(response.result.items));\r\n        dispatch(setUsersTotalCount(response.result.totalCount));\r\n    }\r\n}\r\n\r\nexport const followUser = (userId) => async (dispatch) => {\r\n    dispatch(setFollowingProcess(true, userId));\r\n    let response = await userApi.followUser(userId);\r\n\r\n    if (response.resultCode == 0) {\r\n        dispatch(setUserFollowing(userId));\r\n    }\r\n    dispatch(setFollowingProcess(false, userId));\r\n}\r\nexport const unfollowUser = (userId) => async (dispatch) => {\r\n    dispatch(setFollowingProcess(true, userId));\r\n    let response = await userApi.unfollowUser(userId);\r\n\r\n    if (response.resultCode == 0) {\r\n        dispatch(setUserUnfollowing(userId));\r\n    }\r\n    dispatch(setFollowingProcess(false, userId));\r\n}\r\n\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport css from './Paginator.module.css';\r\n\r\nexport const Paginator = React.memo(({ totalItemsCount, pageSize, currentPage, setCurrentPage, paginatorPartSize }) => {\r\n\r\n    let pageCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let partCount = Math.ceil(pageCount / paginatorPartSize);\r\n    let [partNumber, setPartNumber] = useState(1);\r\n    let leftItemNumber = (partNumber - 1) * paginatorPartSize + 1;\r\n    let rightItemNumber = partNumber * paginatorPartSize;\r\n\r\n    return (\r\n        <div>\r\n            {partNumber > 1 && <button onClick={() => setPartNumber(partNumber - 1)}>Prev</button>}\r\n\r\n            {pages.filter(pageNumber => pageNumber >= leftItemNumber && pageNumber <= rightItemNumber)\r\n                .map(page => {\r\n                    return <span className={page === currentPage ? css.currentPage : css.page}\r\n                                onClick={(e) => setCurrentPage(page)}\r\n                                key={page}>\r\n                                {page}\r\n                            </span>\r\n                })}\r\n\r\n            {partNumber < partCount && <button onClick={() => setPartNumber(partNumber + 1)}>Next</button>}\r\n        </div>\r\n    );\r\n});","import { NavLink } from 'react-router-dom';\r\nimport css from './Users.module.css';\r\nimport avatar from '../../www/images/avatar.png'\r\n\r\nexport const User = ({followingUsersId, unfollowUser, followUser, user}) => {\r\n    return (\r\n        <div key={user.id}>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + user.id}>\r\n                                    <img src={user.photoUrl === '' ? avatar : user.photoUrl} className={css.userPhoto} />\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.Status}</div>\r\n                            <div>{user.location.city}</div>\r\n                            <div>{user.location.country}</div>\r\n                            <div>\r\n                                {user.followed == 1 ?\r\n                                    <button disabled={followingUsersId.some(id => id === user.id)} onClick={() => unfollowUser(user.id)}>unfollow</button> :\r\n                                    <button disabled={followingUsersId.some(id => id === user.id)} onClick={() => followUser(user.id)}>follow</button>}\r\n                            </div>\r\n                        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Paginator } from '../Common/Utils/Paginator';\r\nimport { User } from './User';\r\n\r\nlet Users = React.memo(({totalPageCount, currentPage, users, followingUsersId, unfollowUser, followUser, setCurrentPage, pageSize, paginatorPartSize}) => {\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={totalPageCount} currentPage={currentPage} setCurrentPage={setCurrentPage} pageSize={pageSize} paginatorPartSize={paginatorPartSize}/>\r\n            {\r\n                users.map(u =>\r\n                    <User user={u} followingUsersId={followingUsersId} unfollowUser={unfollowUser} followUser={followUser}/>\r\n                )}\r\n        </div>);\r\n});\r\n\r\nexport default Users;   ","export const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getTotalPageCountSelector = (state) => {\r\n    return state.usersPage.totalPageCount;\r\n}\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getIsLoadingSelector = (state) => {\r\n    return state.usersPage.isLoading;\r\n}\r\nexport const getFollowingUsersId = (state) => {\r\n    return state.usersPage.followingUsersId;\r\n}\r\nexport const getPaginatorPartSize = (state) => {\r\n    return state.usersPage.paginatorPartSize\r\n}","import { connect } from 'react-redux';\r\nimport { followUser, unfollowUser, setFollowingProcess, getUsers, setUsers } from '../../redux/users-reducer'\r\nimport React from 'react';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport {\r\n    getUsersSelector, getCurrentPageSelector,\r\n    getFollowingUsersId, getIsLoadingSelector,\r\n    getPageSizeSelector, getTotalPageCountSelector,\r\n    getPaginatorPartSize\r\n} from '../../redux/users-selector'\r\n\r\nclass UsersContainer extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.setUsers([]);\r\n    }\r\n    setCurrentPage = (page) => {\r\n        this.props.getUsers(page, this.props.pageSize, true);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isLoading ?\r\n                    <Preloader /> : null}\r\n                <Users\r\n                    totalPageCount={this.props.totalPageCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    unfollowUser={this.props.unfollowUser}\r\n                    followUser={this.props.followUser}\r\n                    setCurrentPage={this.setCurrentPage}\r\n                    users={this.props.users}\r\n                    followingUsersId={this.props.followingUsersId}\r\n                    paginatorPartSize={this.props.paginatorPartSize} />\r\n            </>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        totalPageCount: getTotalPageCountSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        isLoading: getIsLoadingSelector(state),\r\n        followingUsersId: getFollowingUsersId(state),\r\n        paginatorPartSize: getPaginatorPartSize(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    followUser,\r\n    unfollowUser,\r\n    setFollowingProcess,\r\n    getUsers,\r\n    setUsers\r\n})(UsersContainer);","import { NavLink, Redirect } from 'react-router-dom';\r\nimport css from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={css.header}>\r\n            <img src='https://placeit-assets1.s3-accelerate.amazonaws.com/custom-pages/make-a-gaming-logo/gaming-logo-maker-for-an-rpg-guild.png' />\r\n            <div className={css.loginBlock}>\r\n                {props.isLogin\r\n                    ?\r\n                    <div>\r\n                        <div>\r\n                            {props.login}\r\n                        </div>\r\n                        <div>\r\n                            <NavLink to='/login' onClick={props.logout}>Logout</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <NavLink to='/login'>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import { SET_LOGIN_DATA, SET_LOGOUT, DELETE_AUTH_DATA } from './constants'\r\nimport { authApi } from '../Api/Api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    errorMessage: null,\r\n    isLogin: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOGIN_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isLogin: true\r\n            }\r\n        case SET_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLogin: action.data\r\n            }\r\n        case DELETE_AUTH_DATA:\r\n            return {\r\n                userId: null,\r\n                login: null,\r\n                email: null,\r\n                isLogin: null\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\nexport const setAuthDataActionCreater = (email, login, userId) => ({ type: SET_LOGIN_DATA, data: { userId, login, email } })\r\nexport const setLogoutActionCreater = () => ({ type: SET_LOGOUT, data: false })\r\nexport const deleteAuthData = () => ({ type: DELETE_AUTH_DATA });\r\n\r\nexport const getAuthState = () => async (dispatch) => {\r\n    let response = await authApi.getAuthState();\r\n\r\n    if (response.resultCode === 0) {\r\n        let { email, login, userId } = response.result;\r\n        dispatch(setAuthDataActionCreater(email, login, userId));\r\n    }\r\n    else {\r\n        dispatch(setLogoutActionCreater());\r\n    }\r\n}\r\n\r\nexport const login = (login, password) => async (dispatch) => {\r\n    let response = await authApi.login(login, password);\r\n\r\n    if (response.resultCode === 0) {\r\n        let { email, login, userId } = response.result;\r\n        dispatch(setAuthDataActionCreater(email, login, userId));\r\n    }\r\n    else {\r\n        dispatch(stopSubmit(\"login\", { _error: response.message }))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authApi.logout()\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(deleteAuthData());\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isLogin: state.auth.isLogin\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })\r\n    (HeaderContainer);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../Common/FormControls';\r\nimport { required } from '../Common/Utils/Validators';\r\nimport css from \"./Login.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <label className={css.inputLabelwhite} for=\"login\">Login:</label>\r\n                    <Field component={Input} id=\"login\" name=\"login\" validate={[required]} />\r\n                </div>\r\n                <div>\r\n                    <label className={css.inputLabelwhite} for=\"password\">Password:</label>\r\n                    <Field component={Input} id=\"password\" name=\"password\" validate={[required]} />\r\n                </div>\r\n                <div>\r\n                    <label className={css.inputLabelwhite} for=\"rememberMe\">remember me</label>\r\n                    <Field component={Input} type=\"checkbox\" name=\"rememberMe\"/>\r\n                </div>\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n                {\r\n                    props.error != null\r\n                        ? <div className={css.errorBlock}>\r\n                            {props.error}\r\n                        </div>\r\n                        :\r\n                        <></>\r\n                }\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);\r\n\r\nexport const Login = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.login(formData.login, formData.password);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>Login</h1>\r\n                <ReduxLoginForm  errorMessage={props.errorMessage} onSubmit={onSubmit} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Login } from './Login';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isLogin \r\n                    ? <Redirect to=\"/profile\"/> \r\n                    : <Login login={this.props.login} errorMessage={this.props.errorMessage}/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogin : state.auth.isLogin,\r\n        errorMessage : state.auth.errorMessage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(LoginContainer);","import { getAuthState } from './auth-reducer'\r\nimport { SET_INITIALIZATION_DATA } from './constants'\r\n\r\nlet initialState = {\r\n    isInitialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZATION_DATA:\r\n            return {\r\n                isInitialized: action.data\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\nexport const setInitializationState = (flag) => ({ type: SET_INITIALIZATION_DATA, data: flag })\r\n\r\nexport const initialize = () => (dispatch) => {\r\n    let promises = getAuthState()(dispatch);\r\n\r\n    Promise.all([promises])\r\n        .then(() => {\r\n            dispatch(setInitializationState(true));\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport dialogReducer from './dialog-reducer'\r\nimport sidebarReducer from './sidebar-reducer'\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport appReducer from './app-reducer';\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers ({\r\n    profilePage : profileReducer,\r\n    dialogsPage : dialogReducer, \r\n    sidebarPage : sidebarReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    app : appReducer,\r\n    form: formReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)\r\n));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from '../components/Common/Preloader/Preloader';\r\n\r\n\r\nexport const SuspenseLoading = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <React.Suspense fallback={<Preloader/>}>\r\n                <Component {...props}/>\r\n            </React.Suspense>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Music from './components/Music/Music';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport { HashRouter, Route, withRouter } from 'react-router-dom'\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginContainer from './components/Login/LoginContainer';\r\nimport React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { initialize } from './redux/app-reducer'\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport store from './redux/redux-store';\r\nimport { Provider } from 'react-redux'\r\nimport { SuspenseLoading } from './Hoc/suspenseLoading';\r\nconst DialogsContainer = React.lazy(() =>  import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() =>  import('./components/Profile/ProfileContainer'));\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initialize();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isInitialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className='dialog-container'>\r\n          <Route path='/dialogs' render={(props) => SuspenseLoading(DialogsContainer)(props)} />\r\n          <Route path='/profile/:userId?' render={(props) => SuspenseLoading(ProfileContainer)(props)} />\r\n          <Route path='/music' render={() => <Music />} />  \r\n          <Route path='/news' render={() => <News />} />\r\n          <Route path='/settings' render={() => <Settings />} />\r\n          <Route path='/users' render={() => <UsersContainer />} />\r\n          <Route path='/login' render={() => <LoginContainer />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isInitialized: state.app.isInitialized\r\n  }\r\n}\r\n\r\nlet TempAppComponent = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initialize }))\r\n  (App);\r\n\r\nlet MainAppComponent = (props) => {\r\n  return (\r\n    <React.StrictMode>\r\n      <HashRouter>\r\n        <Provider store={store}>\r\n          <TempAppComponent />\r\n        </Provider>\r\n      </HashRouter>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\nexport default MainAppComponent;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport MainAppComponent from './App';\r\nimport store from './redux/redux-store';\r\n\r\nReactDOM.render(\r\n  <MainAppComponent/>, document.getElementById('root')\r\n);\r\n\r\nwindow.state = store.getState();\r\n\r\nreportWebVitals(console.log);","export default __webpack_public_path__ + \"static/media/preloader.7f686c03.gif\";","import preloader from '../../../www/images/preloader.gif'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <img src={preloader}/>\r\n    )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__3uSW6\",\"inputLabelwhite\":\"Login_inputLabelwhite__2Jz4g\",\"errorBlock\":\"Login_errorBlock__3SUkJ\"};","import React from 'react'\r\nimport { Field } from 'redux-form';\r\nimport css from './FormControls.module.css'\r\n\r\nexport const FormInput = ({ input, meta, ...props }) => {\r\n    const isError = meta.touched && meta.error;\r\n    const errorMessage = isError ? meta.error : \"\";\r\n\r\n    return (\r\n        <div className={css.formControl + \" \" + (isError ? css.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {\r\n                isError\r\n                    ? <span>{errorMessage}</span>\r\n                    : <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return (\r\n        <FormInput {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormInput>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return (\r\n        <FormInput {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormInput>\r\n    );\r\n}\r\n\r\nexport const createField = (component, placeholder, name, props = {}, validators, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />\r\n            {text}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport const STORE_CONTEXT = React.createContext(null);\r\nexport const ADD_POST = 'add-new-post';\r\nexport const SET_PROFILE_INFO = 'set-profile-info';\r\nexport const ADD_MESSAGE = 'add-new-message';\r\nexport const FOLLOW_USER = 'follow-user';\r\nexport const UNFOLLOW_USER = 'unfollow-user';\r\nexport const SET_USERS = 'set-users';\r\nexport const SET_USERS_TOTAL_COUNT = 'set-users-total-count';\r\nexport const SET_USERS_CURRENT_PAGE = 'set-users-current-page';\r\nexport const SET_LOADING_GIF_PAGE = 'set-loading-gif';\r\nexport const SET_LOGIN_DATA = 'set-login-data';\r\nexport const SET_LOGOUT = 'set-logout';\r\nexport const SET_FOLLOWING_PROCESS = 'set-following_process';\r\nexport const UPDATE_USER_STATUS = 'update-user-status';\r\nexport const DELETE_AUTH_DATA = 'delete-auth-data';\r\nexport const SET_INITIALIZATION_DATA = 'set-initialization-data';\r\nexport const SAVE_AVATAR = 'set-avatar';\r\n","export const required = (value) => {\r\n    if(!value)\r\n        return \"Field is required\";\r\n    return undefined;\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength)\r\n        return `Max length is ${maxLength}`;\r\n    else \r\n        return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPage\":\"Paginator_currentPage__305K3\",\"page\":\"Paginator_page__1Rla7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3SpcS\",\"loginBlock\":\"Header_loginBlock__3BwlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3WxnP\",\"error\":\"FormControls_error__3KV0-\"};","import { stopSubmit } from 'redux-form';\r\nimport { userApi } from '../Api/Api';\r\nimport { ADD_POST, SET_PROFILE_INFO, SET_LOADING_GIF_PAGE, UPDATE_USER_STATUS, SAVE_AVATAR } from './constants'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, text: \"The First post\", likes: 5 },\r\n        { id: 2, text: \"The second post\", likes: 6 },\r\n        { id: 3, text: \"The third post\", likes: 3 },\r\n        { id: 4, text: \"The fourth post\", likes: 7 },\r\n    ],\r\n    profileInfo: {\r\n        status: ''\r\n    },\r\n    isLoading: false,\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            if (action.text !== '') {\r\n                let maxId = getMaxPostId(state);\r\n                let newPost = {\r\n                    id: maxId + 1,\r\n                    text: action.text,\r\n                    likes: 0\r\n                }\r\n                return {\r\n                    ...state,\r\n                    posts: [...state.posts, newPost],\r\n                }\r\n            }\r\n        case SET_PROFILE_INFO: {\r\n            return {\r\n                ...state,\r\n                profileInfo: action.profileInfo\r\n            }\r\n        }\r\n        case SET_LOADING_GIF_PAGE: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        }\r\n        case UPDATE_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    status: action.status\r\n                }\r\n            }\r\n        }\r\n        case SAVE_AVATAR: {\r\n            return {\r\n                ...state,\r\n                profileInfo: { ...state.profileInfo, photoUrl: action.imagePath }\r\n            }\r\n        }\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nconst getMaxPostId = (state) => {\r\n    return state.posts.reduce((max, post) => post.id > max ? post.id : max,\r\n        state.posts[0].id);\r\n}\r\n\r\nexport const newPostActionCreator = (newposttext) => ({ type: ADD_POST, text: newposttext });\r\nexport const setUsersProfile = (profileInfo) => ({ type: SET_PROFILE_INFO, profileInfo: profileInfo });\r\nexport const setLoadingGif = (flag) => ({ type: SET_LOADING_GIF_PAGE, isLoading: flag });\r\nexport const updateUserStatusActionCreater = (status) => ({ type: UPDATE_USER_STATUS, status: status });\r\nexport const saveAvatarSuccess = (imagePath) => ({ type: SAVE_AVATAR, imagePath });\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    dispatch(setLoadingGif(true));\r\n    let response = await userApi.getUserProfile(userId)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUsersProfile(response.result));\r\n    }\r\n\r\n    dispatch(setLoadingGif(false));\r\n}\r\n\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await userApi.updateUserStatus(status);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(updateUserStatusActionCreater(status));\r\n    }\r\n}\r\n\r\nexport const saveAvatar = (file) => async (dispatch) => {\r\n    let response = await userApi.saveAvatar(file);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(saveAvatarSuccess(response.result));\r\n    }\r\n}\r\n\r\nexport const saveUser = (user) => async (dispatch) => {\r\n    let response = await userApi.saveUser(user);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUsersProfile(response.result));\r\n    }\r\n    else  {\r\n        dispatch(stopSubmit(\"profile\", { _error: response.message }))\r\n        return \"error\";\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}