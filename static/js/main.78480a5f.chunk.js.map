{"version":3,"sources":["www/images/avatar.png","components/Users/Users.module.css","Api/Api.js","components/Navbar/Navbar.module.css","reportWebVitals.js","components/Navbar/Navbar.js","components/Music/Music.js","components/News/News.js","components/Settings/Settings.js","components/Common/helpers.js","redux/users-reducer.js","components/Common/Utils/Paginator.js","components/Users/User.js","components/Users/Users.js","redux/users-selector.js","components/Users/UsersContainer.js","components/Header/Header.js","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","components/Login/LoginContainer.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","Hoc/suspenseLoading.js","App.js","index.js","www/images/preloader.gif","components/Common/Preloader/Preloader.js","components/Login/Login.module.css","components/Common/FormControls.js","redux/constants.js","components/Common/Utils/Validators.js","components/Common/Utils/Paginator.module.css","components/Header/Header.module.css","components/Common/FormControls.module.css","redux/profile-reducer.js","redux/dialog-reducer.js"],"names":["module","exports","axiosInstance","axios","withCredentials","baseURL","headers","userApi","getUsers","page","pageSize","get","then","response","data","followUser","userId","post","unfollowUser","getUserProfile","updateUserStatus","status","put","saveUser","user","saveAvatar","file","formdata","FormData","append","authApi","getAuthState","login","password","logout","delete","dialogApi","startDialog","getDialogs","count","getMessages","dialogId","sendMessage","messageText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","css","nav","to","item","activeClassName","active","Music","News","Settings","changeStateProp","items","searchProp","itemId","newProp","map","initialState","users","currentPage","totalPageCount","paginatorPartSize","isLoading","followingUsersId","setUserFollowing","type","FOLLOW_USER","setUserUnfollowing","UNFOLLOW_USER","setUsers","SET_USERS","setUsersTotalCount","SET_USERS_TOTAL_COUNT","usersTotalCount","setUsersCurrentPage","SET_USERS_CURRENT_PAGE","setLoadingGif","flag","SET_LOADING_GIF_PAGE","setFollowingProcess","isFollowing","SET_FOLLOWING_PROCESS","usersReducer","state","action","a","followed","filter","id","Paginator","React","memo","totalItemsCount","setCurrentPage","pageCount","Math","ceil","pages","i","push","partCount","useState","partNumber","setPartNumber","leftItemNumber","rightItemNumber","onClick","pageNumber","e","User","src","photoUrl","avatar","userPhoto","name","Status","location","city","country","disabled","some","Users","u","getUsersSelector","usersPage","getCurrentPageSelector","getTotalPageCountSelector","getPageSizeSelector","getIsLoadingSelector","getFollowingUsersId","getPaginatorPartSize","UsersContainer","props","this","Preloader","PureComponent","connect","dispatch","resultCode","setPageFlag","result","totalCount","Header","header","loginBlock","isLogin","email","errorMessage","setAuthDataActionCreater","SET_LOGIN_DATA","authReducer","SET_LOGOUT","DELETE_AUTH_DATA","HeaderContainer","Component","auth","window","reload","ReduxLoginForm","reduxForm","form","onSubmit","handleSubmit","inputLabelwhite","for","Field","component","Input","validate","required","error","errorBlock","Login","formData","LoginContainer","stopSubmit","_error","message","isInitialized","appReducer","SET_INITIALIZATION_DATA","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogReducer","sidebarPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","SuspenseLoading","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initialize","path","render","TempAppComponent","withRouter","promises","Promise","all","MainAppComponent","StrictMode","ReactDOM","document","getElementById","getState","console","log","preloader","FormInput","input","meta","isError","touched","formControl","children","Textarea","restProps","ADD_POST","SET_PROFILE_INFO","ADD_MESSAGE","UPDATE_USER_STATUS","SAVE_AVATAR","SET_DIALOGS","SET_DIALOGS_TOTAL_COUNT","SET_CURRENT_DIALOG_ID","SET_MESSAGES","value","maxLengthCreator","maxLength","length","posts","text","likes","profileInfo","getMaxPostId","reduce","max","newPostActionCreator","newposttext","setUsersProfile","updateUserStatusActionCreater","imagePath","maxId","newPost","dialogs","messages","currentUserDialogId","currentMessagePage","messagesPageSize","setDialogsTotalCount","setCurrentDialogId","chooseCurrentDialog","newMessageText","reset"],"mappings":"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","file":"static/js/main.78480a5f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.32962620.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1Eszi\",\"currentPage\":\"Users_currentPage__25BYV\"};","import * as axios from 'axios'\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://apiforreactprod.azurewebsites.net/',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'accept': '*/*'}\r\n});\r\n\r\nexport const userApi = {\r\n    getUsers(page, pageSize) {\r\n        return axiosInstance.get(`users?page=${page}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    followUser(userId) {\r\n        return axiosInstance.post(`users/follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollowUser(userId) {\r\n        return axiosInstance.post(`users/unfollow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getUserProfile(userId) {\r\n        return axiosInstance.get(`users/${userId}`).then(response => response.data);\r\n    },\r\n    updateUserStatus(status) {\r\n        return axiosInstance.put('users/updatestatus', { status: status }).then(response => response.data);\r\n    },\r\n    saveUser(user) {\r\n        return axiosInstance.put('users', user).then(response => response.data);\r\n    },\r\n    saveAvatar(file) {\r\n        const formdata = new FormData();\r\n        formdata.append('image', file);\r\n\r\n        return axiosInstance.put('users/savephoto', formdata, {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data'\r\n            }\r\n        }).then(response => response.data);\r\n    }\r\n}\r\nexport const authApi = {\r\n    getAuthState() {\r\n        return axiosInstance.get('auth/status').then(response => response.data);\r\n    },\r\n    login(login, password) {\r\n        return axiosInstance.post('auth/login', {\r\n            login: login,\r\n            password: password,\r\n        }).then(response => response.data);\r\n    },\r\n    logout() {\r\n        return axiosInstance.delete(\"auth/logout\").then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const dialogApi = {\r\n    startDialog(userId) {\r\n        return axiosInstance.post(`dialog/start/${userId}`).then(response => response.data);\r\n    },\r\n    getDialogs(page, count) {\r\n        return axiosInstance.get(`dialog?page=${page}&count=${count}`)\r\n            .then(response => response.data);\r\n    },\r\n    getMessages(dialogId, page, count) {\r\n        return axiosInstance.get(`message?dialogId=${dialogId}&page=${page}&count=${count}`)\r\n            .then(response => response.data);\r\n    },\r\n    sendMessage(messageText, dialogId) {\r\n        return axiosInstance.post(`message?dialogId=${dialogId}`,\r\n           `\"${messageText}\"`\r\n        ).then(response => response.data);\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3wVRQ\",\"item\":\"Navbar_item__1oiZs\",\"active\":\"Navbar_active__3xbXc\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { NavLink } from 'react-router-dom';\r\nimport css from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={css.nav}>\r\n            <div>\r\n                <NavLink to='/profile' className={css.item} activeClassName={css.active}>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/dialogs' className={css.item} activeClassName={css.active}>Dialogs</NavLink>\r\n            </div><div>\r\n                <NavLink to='/news' className={css.item} activeClassName={css.active}>News</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/music' className={css.item} activeClassName={css.active}>Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/settings' className={css.item} activeClassName={css.active}>Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/users' className={css.item} activeClassName={css.active}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import {css} from \"./Music.module.css\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music","import {css} from \"./News.module.css\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News","import {css} from \"./Settings.module.css\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings","export const changeStateProp = (items, searchProp, itemId, newProp) => {\r\n    return items.map((item) => {\r\n        if (item[searchProp] === itemId)\r\n            return {\r\n                ...item,\r\n                ...newProp\r\n            }\r\n        return item;\r\n    });\r\n}","import { UNFOLLOW_USER, FOLLOW_USER, SET_USERS, SET_USERS_TOTAL_COUNT, SET_USERS_CURRENT_PAGE, SET_LOADING_GIF_PAGE, SET_FOLLOWING_PROCESS } from './constants'\r\nimport { userApi } from '../Api/Api'\r\nimport { changeStateProp } from '../components/Common/helpers'\r\n\r\nlet initialState = {\r\n    users: [\r\n    ],\r\n    currentPage: 1,\r\n    totalPageCount: 0,\r\n    pageSize: 5,\r\n    paginatorPartSize: 10,\r\n    isLoading: false,\r\n    followingUsersId: [],\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW_USER: {\r\n            const a = changeStateProp(state.users, \"id\", action.userId, {followed : true});\r\n            return {\r\n                ...state,\r\n                users: a\r\n            }\r\n        }\r\n        case UNFOLLOW_USER: {\r\n            const a = changeStateProp(state.users, \"id\", action.userId, {followed : false});\r\n            return {\r\n                ...state,\r\n                users: a\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalPageCount: action.usersTotalCount\r\n            }\r\n        }\r\n        case SET_USERS_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_LOADING_GIF_PAGE: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        }\r\n        case SET_FOLLOWING_PROCESS: {\r\n            return {\r\n                ...state,\r\n                followingUsersId: action.isFollowing\r\n                    ? [...state.followingUsersId, action.userId]\r\n                    : state.followingUsersId.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\nexport const setUserFollowing = (userId) => ({ type: FOLLOW_USER, userId: userId })\r\nexport const setUserUnfollowing = (userId) => ({ type: UNFOLLOW_USER, userId: userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users: users })\r\nexport const setUsersTotalCount = (count) => ({ type: SET_USERS_TOTAL_COUNT, usersTotalCount: count })\r\nexport const setUsersCurrentPage = (page) => ({ type: SET_USERS_CURRENT_PAGE, currentPage: page })\r\nexport const setLoadingGif = (flag) => ({ type: SET_LOADING_GIF_PAGE, isLoading: flag })\r\nexport const setFollowingProcess = (isFollowing, userId) => ({ type: SET_FOLLOWING_PROCESS, isFollowing, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize, setPageFlag = false) => async (dispatch) => {\r\n    if (setPageFlag)\r\n        dispatch(setUsersCurrentPage(currentPage));\r\n    dispatch(setLoadingGif(true));\r\n    let response = await userApi.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(setLoadingGif(false));\r\n    if (response.resultCode == 0) {\r\n        dispatch(setUsers(response.result.items));\r\n        dispatch(setUsersTotalCount(response.result.totalCount));\r\n    }\r\n}\r\n\r\nexport const followUser = (userId) => async (dispatch) => {\r\n    dispatch(setFollowingProcess(true, userId));\r\n    let response = await userApi.followUser(userId);\r\n\r\n    if (response.resultCode == 0) {\r\n        dispatch(setUserFollowing(userId));\r\n    }\r\n    dispatch(setFollowingProcess(false, userId));\r\n}\r\nexport const unfollowUser = (userId) => async (dispatch) => {\r\n    dispatch(setFollowingProcess(true, userId));\r\n    let response = await userApi.unfollowUser(userId);\r\n\r\n    if (response.resultCode == 0) {\r\n        dispatch(setUserUnfollowing(userId));\r\n    }\r\n    dispatch(setFollowingProcess(false, userId));\r\n}\r\n\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport css from './Paginator.module.css';\r\n\r\nexport const Paginator = React.memo(({ totalItemsCount, pageSize, currentPage, setCurrentPage, paginatorPartSize }) => {\r\n\r\n    let pageCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let partCount = Math.ceil(pageCount / paginatorPartSize);\r\n    let [partNumber, setPartNumber] = useState(1);\r\n    let leftItemNumber = (partNumber - 1) * paginatorPartSize + 1;\r\n    let rightItemNumber = partNumber * paginatorPartSize;\r\n\r\n    return (\r\n        <div>\r\n            {partNumber > 1 && <button onClick={() => setPartNumber(partNumber - 1)}>Prev</button>}\r\n\r\n            {pages.filter(pageNumber => pageNumber >= leftItemNumber && pageNumber <= rightItemNumber)\r\n                .map(page => {\r\n                    return <span className={page === currentPage ? css.currentPage : css.page}\r\n                                onClick={(e) => setCurrentPage(page)}\r\n                                key={page}>\r\n                                {page}\r\n                            </span>\r\n                })}\r\n\r\n            {partNumber < partCount && <button onClick={() => setPartNumber(partNumber + 1)}>Next</button>}\r\n        </div>\r\n    );\r\n});","import { NavLink } from 'react-router-dom';\r\nimport css from './Users.module.css';\r\nimport avatar from '../../www/images/avatar.png'\r\n\r\nexport const User = ({followingUsersId, unfollowUser, followUser, user}) => {\r\n    return (\r\n        <div key={user.id}>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + user.id}>\r\n                                    <img src={user.photoUrl === '' ? avatar : user.photoUrl} className={css.userPhoto} />\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.Status}</div>\r\n                            <div>{user.location.city}</div>\r\n                            <div>{user.location.country}</div>\r\n                            <div>\r\n                                {user.followed == 1 ?\r\n                                    <button disabled={followingUsersId.some(id => id === user.id)} onClick={() => unfollowUser(user.id)}>unfollow</button> :\r\n                                    <button disabled={followingUsersId.some(id => id === user.id)} onClick={() => followUser(user.id)}>follow</button>}\r\n                            </div>\r\n                        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Paginator } from '../Common/Utils/Paginator';\r\nimport { User } from './User';\r\n\r\nlet Users = React.memo(({totalPageCount, currentPage, users, followingUsersId, unfollowUser, followUser, setCurrentPage, pageSize, paginatorPartSize}) => {\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={totalPageCount} currentPage={currentPage} setCurrentPage={setCurrentPage} pageSize={pageSize} paginatorPartSize={paginatorPartSize}/>\r\n            {\r\n                users.map(u =>\r\n                    <User key={u.id} user={u} followingUsersId={followingUsersId} unfollowUser={unfollowUser} followUser={followUser}/>\r\n                )}\r\n        </div>);\r\n});\r\n\r\nexport default Users;   ","export const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getTotalPageCountSelector = (state) => {\r\n    return state.usersPage.totalPageCount;\r\n}\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getIsLoadingSelector = (state) => {\r\n    return state.usersPage.isLoading;\r\n}\r\nexport const getFollowingUsersId = (state) => {\r\n    return state.usersPage.followingUsersId;\r\n}\r\nexport const getPaginatorPartSize = (state) => {\r\n    return state.usersPage.paginatorPartSize\r\n}","import { connect } from 'react-redux';\r\nimport { followUser, unfollowUser, setFollowingProcess, getUsers, setUsers } from '../../redux/users-reducer'\r\nimport React from 'react';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport {\r\n    getUsersSelector, getCurrentPageSelector,\r\n    getFollowingUsersId, getIsLoadingSelector,\r\n    getPageSizeSelector, getTotalPageCountSelector,\r\n    getPaginatorPartSize\r\n} from '../../redux/users-selector'\r\n\r\nclass UsersContainer extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.setUsers([]);\r\n    }\r\n    setCurrentPage = (page) => {\r\n        this.props.getUsers(page, this.props.pageSize, true);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isLoading ?\r\n                    <Preloader /> : null}\r\n                <Users\r\n                    totalPageCount={this.props.totalPageCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    unfollowUser={this.props.unfollowUser}\r\n                    followUser={this.props.followUser}\r\n                    setCurrentPage={this.setCurrentPage}\r\n                    users={this.props.users}\r\n                    followingUsersId={this.props.followingUsersId}\r\n                    paginatorPartSize={this.props.paginatorPartSize} />\r\n            </>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        totalPageCount: getTotalPageCountSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        isLoading: getIsLoadingSelector(state),\r\n        followingUsersId: getFollowingUsersId(state),\r\n        paginatorPartSize: getPaginatorPartSize(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    followUser,\r\n    unfollowUser,\r\n    setFollowingProcess,\r\n    getUsers,\r\n    setUsers\r\n})(UsersContainer);","import { NavLink, Redirect } from 'react-router-dom';\r\nimport css from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={css.header}>\r\n            <img src='https://placeit-assets1.s3-accelerate.amazonaws.com/custom-pages/make-a-gaming-logo/gaming-logo-maker-for-an-rpg-guild.png' />\r\n            <div className={css.loginBlock}>\r\n                {props.isLogin\r\n                    ?\r\n                    <div>\r\n                        <div>\r\n                            {props.name}\r\n                        </div>\r\n                        <div>\r\n                            <NavLink to='/login' onClick={props.logout}>Logout</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <NavLink to='/login'>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import { SET_LOGIN_DATA, SET_LOGOUT, DELETE_AUTH_DATA } from './constants'\r\nimport { authApi } from '../Api/Api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    name: null,\r\n    email: null,\r\n    errorMessage: null,\r\n    isLogin: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOGIN_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isLogin: true\r\n            }\r\n        case SET_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLogin: action.data\r\n            }\r\n        case DELETE_AUTH_DATA:\r\n            return {\r\n                userId: null,\r\n                login: null,\r\n                email: null,\r\n                isLogin: null\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\nexport const setAuthDataActionCreater = (email, name, userId) => ({ type: SET_LOGIN_DATA, data: { userId, name, email } })\r\nexport const setLogoutActionCreater = () => ({ type: SET_LOGOUT, data: false })\r\nexport const deleteAuthData = () => ({ type: DELETE_AUTH_DATA });\r\n\r\nexport const getAuthState = () => async (dispatch) => {\r\n    let response = await authApi.getAuthState();\r\n\r\n    if (response.resultCode === 0) {\r\n        let { email, name, userId } = response.result;\r\n        dispatch(setAuthDataActionCreater(email, name, userId));\r\n    }\r\n    else {\r\n        dispatch(setLogoutActionCreater());\r\n    }\r\n}\r\n\r\nexport const login = (login, password) => async (dispatch) => {\r\n    let response = await authApi.login(login, password);\r\n\r\n    if (response.resultCode === 0) {\r\n        let { email, name, id } = response.result;\r\n        dispatch(setAuthDataActionCreater(email, name, id));\r\n    }\r\n    else {\r\n        dispatch(stopSubmit(\"login\", { _error: response.message }))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authApi.logout()\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(deleteAuthData());\r\n        window.location.reload(true);\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        name: state.auth.name,\r\n        isLogin: state.auth.isLogin\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })\r\n    (HeaderContainer);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../Common/FormControls';\r\nimport { required } from '../Common/Utils/Validators';\r\nimport css from \"./Login.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <label className={css.inputLabelwhite} for=\"login\">Login:</label>\r\n                    <Field component={Input} id=\"login\" name=\"login\" validate={[required]} />\r\n                </div>\r\n                <div>\r\n                    <label className={css.inputLabelwhite} for=\"password\">Password:</label>\r\n                    <Field component={Input} id=\"password\" name=\"password\" validate={[required]} />\r\n                </div>\r\n                <div>\r\n                    <label className={css.inputLabelwhite} for=\"rememberMe\">remember me</label>\r\n                    <Field component={Input} type=\"checkbox\" name=\"rememberMe\"/>\r\n                </div>\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n                {\r\n                    props.error != null\r\n                        ? <div className={css.errorBlock}>\r\n                            {props.error}\r\n                        </div>\r\n                        :\r\n                        <></>\r\n                }\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);\r\n\r\nexport const Login = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.login(formData.login, formData.password);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>Login</h1>\r\n                <ReduxLoginForm  errorMessage={props.errorMessage} onSubmit={onSubmit} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Login } from './Login';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isLogin \r\n                    ? <Redirect to=\"/profile\"/> \r\n                    : <Login login={this.props.login} errorMessage={this.props.errorMessage}/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogin : state.auth.isLogin,\r\n        errorMessage : state.auth.errorMessage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(LoginContainer);","import { getAuthState } from './auth-reducer'\r\nimport { SET_INITIALIZATION_DATA } from './constants'\r\n\r\nlet initialState = {\r\n    isInitialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZATION_DATA:\r\n            return {\r\n                isInitialized: action.data\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\nexport const setInitializationState = (flag) => ({ type: SET_INITIALIZATION_DATA, data: flag })\r\nexport const initialize = () => (dispatch) => {\r\n    let promises = getAuthState()(dispatch);\r\n\r\n    Promise.all([promises])\r\n        .then(() => {\r\n            dispatch(setInitializationState(true));\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport dialogReducer from './dialog-reducer'\r\nimport sidebarReducer from './sidebar-reducer'\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport appReducer from './app-reducer';\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers ({\r\n    profilePage : profileReducer,\r\n    dialogsPage : dialogReducer, \r\n    sidebarPage : sidebarReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    app : appReducer,\r\n    form: formReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)\r\n));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from '../components/Common/Preloader/Preloader';\r\n\r\n\r\nexport const SuspenseLoading = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <React.Suspense fallback={<Preloader/>}>\r\n                <Component {...props}/>\r\n            </React.Suspense>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Music from './components/Music/Music';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport { HashRouter, Route, withRouter } from 'react-router-dom'\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginContainer from './components/Login/LoginContainer';\r\nimport React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { initialize } from './redux/app-reducer'\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport store from './redux/redux-store';\r\nimport { Provider } from 'react-redux'\r\nimport { SuspenseLoading } from './Hoc/suspenseLoading';\r\nconst DialogsContainer = React.lazy(() =>  import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() =>  import('./components/Profile/ProfileContainer'));\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initialize();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isInitialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className='dialog-container'>\r\n          <Route path='/dialogs/:dialogId?' render={(props) => SuspenseLoading(DialogsContainer)(props)} />\r\n          <Route path='/profile/:userId?' render={(props) => SuspenseLoading(ProfileContainer)(props)} />\r\n          <Route path='/music' render={() => <Music />} />  \r\n          <Route path='/news' render={() => <News />} />\r\n          <Route path='/settings' render={() => <Settings />} />\r\n          <Route path='/users' render={() => <UsersContainer />} />\r\n          <Route path='/login' render={() => <LoginContainer />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isInitialized: state.app.isInitialized\r\n  }\r\n}\r\n\r\nlet TempAppComponent = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initialize }))\r\n  (App);\r\n\r\nlet MainAppComponent = (props) => {\r\n  return (\r\n    <React.StrictMode>\r\n      <HashRouter>\r\n        <Provider store={store}>\r\n          <TempAppComponent />\r\n        </Provider>\r\n      </HashRouter>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\nexport default MainAppComponent;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport MainAppComponent from './App';\r\nimport store from './redux/redux-store';\r\n\r\nReactDOM.render(\r\n  <MainAppComponent/>, document.getElementById('root')\r\n);\r\n\r\nwindow.state = store.getState();\r\n\r\nreportWebVitals(console.log);","export default __webpack_public_path__ + \"static/media/preloader.7f686c03.gif\";","import preloader from '../../../www/images/preloader.gif'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <img src={preloader}/>\r\n    )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__3uSW6\",\"inputLabelwhite\":\"Login_inputLabelwhite__2Jz4g\",\"errorBlock\":\"Login_errorBlock__3SUkJ\"};","import React from 'react'\r\nimport { Field } from 'redux-form';\r\nimport css from './FormControls.module.css'\r\n\r\nexport const FormInput = ({ input, meta, ...props }) => {\r\n    const isError = meta.touched && meta.error;\r\n    const errorMessage = isError ? meta.error : \"\";\r\n\r\n    return (\r\n        <div className={css.formControl + \" \" + (isError ? css.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {\r\n                isError\r\n                    ? <span>{errorMessage}</span>\r\n                    : <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return (\r\n        <FormInput {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormInput>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return (\r\n        <FormInput {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormInput>\r\n    );\r\n}\r\n\r\nexport const createField = (component, placeholder, name, props = {}, validators, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />\r\n            {text}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport const STORE_CONTEXT = React.createContext(null);\r\nexport const ADD_POST = 'add-new-post';\r\nexport const SET_PROFILE_INFO = 'set-profile-info';\r\nexport const ADD_MESSAGE = 'add-new-message';\r\nexport const FOLLOW_USER = 'follow-user';\r\nexport const UNFOLLOW_USER = 'unfollow-user';\r\nexport const SET_USERS = 'set-users';\r\nexport const SET_USERS_TOTAL_COUNT = 'set-users-total-count';\r\nexport const SET_USERS_CURRENT_PAGE = 'set-users-current-page';\r\nexport const SET_LOADING_GIF_PAGE = 'set-loading-gif';\r\nexport const SET_LOGIN_DATA = 'set-login-data';\r\nexport const SET_LOGOUT = 'set-logout';\r\nexport const SET_FOLLOWING_PROCESS = 'set-following_process';\r\nexport const UPDATE_USER_STATUS = 'update-user-status';\r\nexport const DELETE_AUTH_DATA = 'delete-auth-data';\r\nexport const SET_INITIALIZATION_DATA = 'set-initialization-data';\r\nexport const SAVE_AVATAR = 'set-avatar';\r\n\r\n//  DIALOG\r\nexport const SET_DIALOGS = 'set-dialogs';\r\nexport const SET_DIALOGS_TOTAL_COUNT = 'set-dialogs-total-count';\r\nexport const SET_CURRENT_DIALOG_ID = 'set-current_dialog-id';\r\nexport const SET_MESSAGES = 'set-messages';\r\n\r\n\r\n","export const required = (value) => {\r\n    if(!value)\r\n        return \"Field is required\";\r\n    return undefined;\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength)\r\n        return `Max length is ${maxLength}`;\r\n    else \r\n        return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPage\":\"Paginator_currentPage__305K3\",\"page\":\"Paginator_page__1Rla7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3SpcS\",\"loginBlock\":\"Header_loginBlock__3BwlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3WxnP\",\"error\":\"FormControls_error__3KV0-\"};","import { stopSubmit } from 'redux-form';\r\nimport { userApi } from '../Api/Api';\r\nimport { ADD_POST, SET_PROFILE_INFO, SET_LOADING_GIF_PAGE, UPDATE_USER_STATUS, SAVE_AVATAR } from './constants'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, text: \"The First post\", likes: 5 },\r\n        { id: 2, text: \"The second post\", likes: 6 },\r\n        { id: 3, text: \"The third post\", likes: 3 },\r\n        { id: 4, text: \"The fourth post\", likes: 7 },\r\n    ],\r\n    profileInfo: {\r\n        status: ''\r\n    },\r\n    isLoading: false,\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            if (action.text !== '') {\r\n                let maxId = getMaxPostId(state);\r\n                let newPost = {\r\n                    id: maxId + 1,\r\n                    text: action.text,\r\n                    likes: 0\r\n                }\r\n                return {\r\n                    ...state,\r\n                    posts: [...state.posts, newPost],\r\n                }\r\n            }\r\n        case SET_PROFILE_INFO: {\r\n            return {\r\n                ...state,\r\n                profileInfo: action.profileInfo\r\n            }\r\n        }\r\n        case SET_LOADING_GIF_PAGE: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        }\r\n        case UPDATE_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    status: action.status\r\n                }\r\n            }\r\n        }\r\n        case SAVE_AVATAR: {\r\n            return {\r\n                ...state,\r\n                profileInfo: { ...state.profileInfo, photoUrl: action.imagePath }\r\n            }\r\n        }\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nconst getMaxPostId = (state) => {\r\n    return state.posts.reduce((max, post) => post.id > max ? post.id : max,\r\n        state.posts[0].id);\r\n}\r\n\r\nexport const newPostActionCreator = (newposttext) => ({ type: ADD_POST, text: newposttext });\r\nexport const setUsersProfile = (profileInfo) => ({ type: SET_PROFILE_INFO, profileInfo: profileInfo });\r\nexport const setLoadingGif = (flag) => ({ type: SET_LOADING_GIF_PAGE, isLoading: flag });\r\nexport const updateUserStatusActionCreater = (status) => ({ type: UPDATE_USER_STATUS, status: status });\r\nexport const saveAvatarSuccess = (imagePath) => ({ type: SAVE_AVATAR, imagePath });\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    dispatch(setLoadingGif(true));\r\n    let response = await userApi.getUserProfile(userId)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUsersProfile(response.result));\r\n    }\r\n\r\n    dispatch(setLoadingGif(false));\r\n}\r\n\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await userApi.updateUserStatus(status);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(updateUserStatusActionCreater(status));\r\n    }\r\n}\r\n\r\nexport const saveAvatar = (file) => async (dispatch) => {\r\n    let response = await userApi.saveAvatar(file);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(saveAvatarSuccess(response.result));\r\n    }\r\n}\r\n\r\nexport const saveUser = (user) => async (dispatch) => {\r\n    let response = await userApi.saveUser(user);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUsersProfile(response.result));\r\n    }\r\n    else  {\r\n        dispatch(stopSubmit(\"profile\", { _error: response.message }))\r\n        return \"error\";\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import { reset } from 'redux-form'\r\nimport { dialogApi } from '../Api/Api'\r\nimport { ADD_MESSAGE,  SET_DIALOGS_TOTAL_COUNT, SET_DIALOGS, SET_CURRENT_DIALOG_ID, SET_MESSAGES } from './constants'\r\n\r\nlet initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    currentUserDialogId: '',\r\n    currentPage: 1,\r\n    totalPageCount: 0,\r\n    pageSize: 5,\r\n    currentMessagePage: 1,\r\n    messagesPageSize: 10\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.message]\r\n            }\r\n        case SET_DIALOGS_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.count\r\n            }\r\n        case SET_DIALOGS:\r\n            return {\r\n                ...state,\r\n                dialogs: [...action.dialogs]\r\n            }\r\n        case SET_CURRENT_DIALOG_ID:\r\n            return {\r\n                ...state,\r\n                currentUserDialogId : action.dialogId\r\n            }\r\n        case SET_MESSAGES: \r\n            return {\r\n                ...state,\r\n                messages : [...action.messages]\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst setDialogs = (dialogs) => ({ type: SET_DIALOGS, dialogs });\r\nconst setDialogsTotalCount = (count) => ({ type: SET_DIALOGS_TOTAL_COUNT, count });\r\nconst setCurrentDialogId = (dialogId) => ({ type: SET_CURRENT_DIALOG_ID, dialogId });\r\nconst setMessages = (messages) => ({ type: SET_MESSAGES, messages});\r\nconst addMessage = (message) => ({ type: ADD_MESSAGE, message })\r\n\r\nexport const startDialog = (userId, page, count) => async (dispatch) => {\r\n    let response = await dialogApi.startDialog(userId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(chooseCurrentDialog(response.result, page, count));\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageText, dialogId) => async (dispatch) => {\r\n    let response = await dialogApi.sendMessage(newMessageText, dialogId);\r\n    if(response.resultCode === 0) {\r\n        dispatch(addMessage(response.result));\r\n        dispatch(reset('message'));\r\n    }\r\n}\r\nexport const getDialogs = (page, count) => async (dispatch) => {\r\n    let response = await dialogApi.getDialogs(page, count);\r\n    if (response.resultCode === 0) {\r\n        dispatch(setDialogs(response.result.items));\r\n        dispatch(setDialogsTotalCount(response.totalCount));\r\n    }\r\n}\r\nexport const chooseCurrentDialog = (dialogId, page, count) => async (dispatch) => {\r\n    let response = await dialogApi.getMessages(dialogId, page, count);\r\n    if (response.resultCode === 0) {\r\n        dispatch(setCurrentDialogId(response.result.dialogId));\r\n        dispatch(setMessages(response.result.items));\r\n    }\r\n}\r\n\r\nexport default dialogReducer;"],"sourceRoot":""}