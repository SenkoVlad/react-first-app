{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusInfoWIthHook.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Posts/Post/Post.js","components/Profile/Posts/Posts.js","components/Profile/Posts/PostsContainer.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusInfoWithHook","props","useState","status","setStatus","editMode","setEditMode","useEffect","changeEditMode","flag","updateUserStatus","onDoubleClick","onChange","e","currentTarget","value","onBlur","autoFocus","ProfileInfo","className","css","whiteText","profileInfo","name","src","photoUrl","avatar","userPhoto","isLookingForAJob","resumeText","Post","item","text","likes","maxLength10","maxLengthCreator","ReduxPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Posts","React","memo","postElements","posts","map","post","id","formData","addPost","newposttext","paddingTop10","PostsContainer","connect","state","profilePage","dispatch","newPostActionCreator","ProfileContainer","this","getCurrentUserId","history","push","profile","isLoading","Preloader","content","a","match","params","userId","getUserProfile","loadUserProfile","setUsersProfile","Component","compose","withRouter","auth"],"mappings":"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","file":"static/js/3.05222ca2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"ProfileInfo_userPhoto__NyjsD\",\"whiteText\":\"ProfileInfo_whiteText__RUSFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2qaVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop10\":\"Posts_paddingTop10__3nRd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__P2UQl\"};","import { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusInfoWithHook = (props) => {\r\n    let [status, setStatus] = useState(props.status);\r\n    let [editMode, setEditMode] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status])\r\n\r\n    const changeEditMode = (flag) => {\r\n        setEditMode(flag);\r\n        if (flag)\r\n            props.updateUserStatus(status);\r\n    }\r\n    const updateStatus = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ?\r\n                <div>\r\n                    <span onDoubleClick={() => changeEditMode(false)}>{status ? status : '---------'}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input onChange={updateStatus} onBlur={() => changeEditMode(true)} autoFocus={true} value={status} />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusInfoWithHook","import css from './ProfileInfo.module.css'\r\nimport avatar from '../../../www/images/avatar.png'\r\nimport ProfileStatusInfoWithHook from './ProfileStatusInfoWIthHook';\r\n\r\nconst ProfileInfo = (props) => {\r\n  return (\r\n    <div className={css.whiteText}>\r\n      <div>\r\n        <div>\r\n          FullName: {props.profileInfo.name}\r\n        </div>\r\n        <img src={props.profileInfo.photoUrl === '' ? avatar : props.profileInfo.photoUrl} className={css.userPhoto} />\r\n      </div>\r\n\r\n      <ProfileStatusInfoWithHook status={props.profileInfo.status} updateUserStatus={props.updateUserStatus}/>\r\n\r\n      <div>\r\n        {props.profileInfo.isLookingForAJob === true ? 'Job resume: ' + props.profileInfo.resumeText : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import css from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={css.item}>\r\n      <img src='https://banner2.cleanpng.com/20180920/yko/kisspng-computer-icons-portable-network-graphics-avatar-ic-5ba3c66df14d32.3051789815374598219884.jpg'/>\r\n      {props.text}\r\n      <div>\r\n        <span>like {props.likes}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import css from './Posts.module.css'\r\nimport Post from './Post/Post'\r\nimport React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required, maxLengthCreator } from '../../Common/Utils/Validators'\r\nimport { Textarea } from '../../Common/FormControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field name='newposttext' component={Textarea} validate={[required, maxLength10]} placeholder=\"New post\" />\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ReduxPostForm = reduxForm({\r\n  form: 'post'\r\n})(PostForm);\r\n\r\nconst Posts = React.memo((props) => {\r\n  let postElements = props.posts.map(post => <Post text={post.text} likes={post.likes} key={post.id} />)\r\n\r\n  let onSubmit = (formData) => {\r\n    props.addPost(formData.newposttext);\r\n  }\r\n    return (\r\n      <div>\r\n        <div>\r\n          <ReduxPostForm onSubmit={onSubmit} />\r\n        </div>\r\n        <h3>My posts</h3>\r\n        <div className={css.paddingTop10}>\r\n          {postElements}\r\n        </div>\r\n      </div>\r\n    );\r\n});\r\n\r\nexport default Posts;\r\n","import { connect } from 'react-redux';\r\nimport { newPostActionCreator } from '../../../redux/profile-reducer'\r\nimport Posts from './Posts'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newposttext) => {\r\n      dispatch(newPostActionCreator(newposttext));\r\n    }\r\n  }\r\n}\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport { getUserProfile, setUsersProfile, updateUserStatus } from '../../redux/profile-reducer'\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport css from './Profile.module.css'\r\nimport PostsContainer from './Posts/PostsContainer';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  render() {\r\n    if (!this.getCurrentUserId())\r\n      this.props.history.push(\"/login\");\r\n\r\n    return (\r\n      <>\r\n        {\r\n          this.props.profile.isLoading ?\r\n            <Preloader /> :\r\n            <div className={css.content}>\r\n                <ProfileInfo profileInfo={this.props.profile.profileInfo} updateUserStatus={this.props.updateUserStatus}/>\r\n                <PostsContainer />\r\n            </div>\r\n        }\r\n        <div>{this.props.a}</div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  getCurrentUserId() {\r\n    return this.props.match.params.userId ? this.props.match.params.userId : this.props.userId;\r\n  }\r\n\r\n  loadUserProfile() {\r\n    let userId = this.getCurrentUserId();\r\n    if (!userId)\r\n      this.props.history.push(\"/login\");\r\n    else\r\n      this.props.getUserProfile(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadUserProfile();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setUsersProfile({});\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.userId,\r\n    profile: state.profilePage,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    setUsersProfile,\r\n    updateUserStatus\r\n  })\r\n)(ProfileContainer);"],"sourceRoot":""}