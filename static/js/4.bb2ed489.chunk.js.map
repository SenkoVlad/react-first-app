{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogsItem.module.css","Hoc/withAuthRedirect.js","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","mapAuthStateToProps","state","isLogin","auth","Message","props","msgStyle","message","userIdOwner","userId","css","incomingMsg","className","text","DialogItem","path","id","to","onClick","dialogId","chooseCurrentDialog","currentMessagePage","messagesPageSize","activeClassName","activeItem","currentUserDialogId","dialogItem","name","ReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Input","validate","required","Dialogs","nextProps","nextState","this","messageElements","messages","map","elem","dialogElements","dialogs","dialogsItems","formData","sendMessage","newMessageText","React","Component","DialogsContainer","getDialogs","currentPage","pageSize","PureComponent","compose","AuthRedirect","connect","dialogsPage"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,WAAa,4BAA4B,SAAW,4B,oBCAtJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,+B,oBCAnED,EAAOC,QAAU,CAAC,WAAa,gCAAgC,WAAa,kC,2ICGxEC,EAAsB,SAACC,GAAD,MAAY,CAAEC,QAASD,EAAME,KAAKD,U,4CCF/CE,EAAU,SAACC,GACpB,IAAIC,EAAWD,EAAME,QAAQC,cAAgBH,EAAMI,OAASC,IAAIH,QAAUG,IAAIH,QAAU,IAAMG,IAAIC,YAClG,OAAO,qBAAKC,UAAWN,EAAhB,SAA2BD,EAAME,QAAQM,Q,0BCDvCC,EAAa,SAACT,GACvB,IAAIU,EAAO,YAAcV,EAAMW,GAM/B,OACI,8BACI,cAAC,IAAD,CAASC,GAAIF,EACTG,QAAS,kBAPQC,EAOkBd,EAAMW,QANjDX,EAAMe,oBAAoBD,EAAUd,EAAMgB,mBAAoBhB,EAAMiB,kBAD5C,IAACH,GAQjBI,gBAAiBb,IAAIc,WACrBZ,UAAWP,EAAMW,KAAOX,EAAMoB,oBAAsBf,IAAIc,WAAad,IAAIgB,WAH7E,SAG0FrB,EAAMsB,U,iCCYtGC,EAAmBC,YAAU,CAC/BC,KAAM,WADeD,EAnBL,SAACxB,GACjB,OACI,8BACI,8BACI,8BACI,uBAAM0B,SAAU1B,EAAM2B,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAOR,KAAK,iBAAiBS,SAAU,CAACC,SAE9D,8BACI,gEAgEbC,E,2KAlDX,SAAsBC,EAAWC,GAC7B,OAAOC,KAAKpC,OAASkC,GAAaE,KAAKxC,OAASuC,I,oBAGpD,WAAU,IAAD,OACDE,EAAkBD,KAAKpC,MAAMsC,SAASC,KAAI,SAAAC,GAAI,OAC9C,gCACI,cAAC,EAAD,CAAStC,QAASsC,EACdpC,OAAQ,EAAKJ,MAAMI,QADMoC,EAAK7B,IAElC,6BAEJ8B,EAAiBL,KAAKpC,MAAM0C,QAAQH,KAAI,SAAAC,GAAI,OAC5C,gCACI,cAAC,EAAD,CAAY7B,GAAI6B,EAAK7B,GAAkBW,KAAMkB,EAAKlB,KAC9CP,oBAAqB,EAAKf,MAAMe,oBAChCC,mBAAoB,EAAKhB,MAAMgB,mBAC/BC,iBAAkB,EAAKjB,MAAMiB,iBAC7BG,oBAAqB,EAAKpB,MAAMoB,qBAJNoB,EAAK7B,IAMnC,yBAPM6B,EAAK7B,OAcnB,OACI,sBAAKJ,UAAWF,IAAIqC,QAApB,UACI,qBAAKnC,UAAWF,IAAIsC,aAApB,SACKF,IAEL,8BAEQL,KAAKpC,MAAMoB,qBACX,gCACI,8BACI,qBAAKb,UAAWF,IAAIiC,SAApB,SACKD,MAGT,cAACd,EAAD,CAAkBG,SAjBvB,SAACkB,GACZ,EAAK5C,MAAM6C,YAAYD,EAASE,eAAgB,EAAK9C,MAAMoB,oC,GAzBjD2B,IAAMC,WCxBtBC,E,uKACF,WACIb,KAAKpC,MAAMkD,WAAWd,KAAKpC,MAAMmD,YAAaf,KAAKpC,MAAMoD,Y,oBAG7D,WACI,OACI,cAAC,EAAD,CAASV,QAASN,KAAKpC,MAAM0C,QACpBtC,OAAQgC,KAAKpC,MAAMI,OACnBkC,SAAUF,KAAKpC,MAAMsC,SACrBc,SAAUhB,KAAKpC,MAAMoD,SACrBD,YAAaf,KAAKpC,MAAMmD,YACxBlC,iBAAkBmB,KAAKpC,MAAMiB,iBAC7BD,mBAAoBoB,KAAKpC,MAAMgB,mBAC/BD,oBAAqBqB,KAAKpC,MAAMe,oBAChC8B,YAAaT,KAAKpC,MAAM6C,YACxBzB,oBAAqBgB,KAAKpC,MAAMoB,0B,GAhBtB2B,IAAMM,eAqCtBC,uBJtCiB,SAACN,GAAe,IACtCO,EADqC,4JAEvC,WACI,OAAKnB,KAAKpC,MAAMH,QAET,cAACmD,EAAD,eAAeZ,KAAKpC,QADhB,cAAC,IAAD,CAAUY,GAAG,eAJW,GAChBmC,IAAMC,WAOjC,OAAOQ,YAAQ7D,EAAR6D,CAA6BD,KIgCpCC,aAjBoB,SAAC5D,GAAW,IAAD,EAC/B,OAAO,EAAP,CACI0C,SAAU1C,EAAM6D,YAAYnB,SAC5Bc,SAAUxD,EAAM6D,YAAYL,SAC5BV,QAAS9C,EAAM6D,YAAYf,QAC3B1B,mBAAoBpB,EAAM6D,YAAYzC,mBACtCC,iBAAkBrB,EAAM6D,YAAYxC,iBACpCG,oBAAqBxB,EAAM6D,YAAYrC,qBAN3C,yBAOcxB,EAAM6D,YAAYL,UAPhC,4BAQiBxD,EAAM6D,YAAYN,aARnC,uBASYvD,EAAME,KAAKM,QATvB,IAgByB,CACrByC,gBACAK,eACAnC,0BALOuC,CAObL","file":"static/js/4.bb2ed489.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Qwssn\",\"dialogsItems\":\"Dialogs_dialogsItems__1zIp8\",\"activeItem\":\"Dialogs_activeItem__38U2B\",\"messages\":\"Dialogs_messages__ZvBsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__nWfIo\",\"incomingMsg\":\"Message_incomingMsg__2ZeeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogsItem_dialogItem__BWYD7\",\"activeItem\":\"DialogsItem_activeItem__1ZHBk\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapAuthStateToProps = (state) => ({ isLogin: state.auth.isLogin })\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class AuthRedirect extends React.Component {\r\n        render() {\r\n            if (!this.props.isLogin)\r\n                return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapAuthStateToProps)(AuthRedirect);\r\n}\r\n\r\n\r\n\r\n\r\n","import css from \"./Message.module.css\";\r\n\r\nexport const Message = (props) => {\r\n    var msgStyle = props.message.userIdOwner === props.userId ? css.message : css.message + ' ' + css.incomingMsg;\r\n    return <div className={msgStyle}>{props.message.text}</div>;\r\n};\r\n","import { NavLink } from \"react-router-dom\";\r\nimport css from \"./DialogsItem.module.css\";\r\n\r\nexport const DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    const chooseCurrentDialog = (dialogId) => {\r\n        props.chooseCurrentDialog(dialogId, props.currentMessagePage, props.messagesPageSize);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to={path}\r\n                onClick={() => chooseCurrentDialog(props.id)}\r\n                activeClassName={css.activeItem}\r\n                className={props.id === props.currentUserDialogId ? css.activeItem : css.dialogItem}>{props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n","import css from \"./Dialogs.module.css\";\r\nimport { Message } from \"./Message/Message\";\r\nimport { DialogItem } from \"./DialogItem/DialogItem\";\r\nimport React from 'react'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from \"../Common/FormControls\";\r\nimport { required } from \"../Common/Utils/Validators\";\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <div>\r\n                            <Field component={Input} name='newMessageText' validate={[required]} />\r\n                        </div>\r\n                        <div>\r\n                            <button>Send message</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ReduxMessageForm = reduxForm({\r\n    form: \"message\"\r\n})(MessageForm);\r\n\r\nclass Dialogs extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props != nextProps || this.state != nextState;\r\n    }\r\n\r\n    render() {\r\n        let messageElements = this.props.messages.map(elem =>\r\n            <div>\r\n                <Message message={elem} key={elem.id}\r\n                    userId={this.props.userId} />\r\n                <hr />\r\n            </div>);\r\n        let dialogElements = this.props.dialogs.map(elem =>\r\n            <div key={elem.id}>\r\n                <DialogItem id={elem.id} key={elem.id} name={elem.name}\r\n                    chooseCurrentDialog={this.props.chooseCurrentDialog}\r\n                    currentMessagePage={this.props.currentMessagePage}\r\n                    messagesPageSize={this.props.messagesPageSize}\r\n                    currentUserDialogId={this.props.currentUserDialogId}\r\n                />\r\n                <hr />\r\n            </div>\r\n        )\r\n\r\n        let onSubmit = (formData) => {\r\n            this.props.sendMessage(formData.newMessageText, this.props.currentUserDialogId);\r\n        }\r\n        return (\r\n            <div className={css.dialogs}>\r\n                <div className={css.dialogsItems}>\r\n                    {dialogElements}\r\n                </div>\r\n                <div>\r\n                    {\r\n                        this.props.currentUserDialogId &&\r\n                        <div>\r\n                            <div>\r\n                                <div className={css.messages}>\r\n                                    {messageElements}\r\n                                </div>\r\n                            </div>\r\n                            <ReduxMessageForm onSubmit={onSubmit} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { sendMessage, getDialogs, chooseCurrentDialog } from '../../redux/dialog-reducer'\r\nimport Dialogs from './Dialogs';\r\n\r\nclass DialogsContainer extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.props.getDialogs(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialogs dialogs={this.props.dialogs} \r\n                     userId={this.props.userId}\r\n                     messages={this.props.messages}\r\n                     pageSize={this.props.pageSize} \r\n                     currentPage={this.props.currentPage}\r\n                     messagesPageSize={this.props.messagesPageSize}\r\n                     currentMessagePage={this.props.currentMessagePage}\r\n                     chooseCurrentDialog={this.props.chooseCurrentDialog}\r\n                     sendMessage={this.props.sendMessage}\r\n                     currentUserDialogId={this.props.currentUserDialogId}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        pageSize: state.dialogsPage.pageSize,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        currentMessagePage: state.dialogsPage.currentMessagePage,\r\n        messagesPageSize: state.dialogsPage.messagesPageSize,\r\n        currentUserDialogId: state.dialogsPage.currentUserDialogId,\r\n        pageSize: state.dialogsPage.pageSize,\r\n        currentPage: state.dialogsPage.currentPage,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        sendMessage,\r\n        getDialogs,\r\n        chooseCurrentDialog\r\n    })\r\n)(DialogsContainer);"],"sourceRoot":""}