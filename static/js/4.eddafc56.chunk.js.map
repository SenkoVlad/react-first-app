{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogsItem.module.css","Hoc/withAuthRedirect.js","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","mapAuthStateToProps","state","isLogin","auth","Message","props","msgStyle","message","id","css","incomingMsg","className","text","DialogItem","path","to","activeClassName","activeItem","dialogItem","name","ReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Input","validate","required","Dialogs","nextProps","nextState","this","messageElements","dialogPage","messages","map","elem","dialogElements","dialogs","dialogsItems","formData","sendMessage","newMessageText","React","Component","compose","AuthRedirect","connect","dialogsPage","dispatch","newMessageActionCreator"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,WAAa,4BAA4B,SAAW,4B,oBCAtJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,+B,oBCAnED,EAAOC,QAAU,CAAC,WAAa,gCAAgC,WAAa,kC,kICGxEC,EAAsB,SAACC,GAAD,MAAY,CAAEC,QAASD,EAAME,KAAKD,U,6CCF/CE,EAAU,SAACC,GACpB,IAAIC,EAAWD,EAAME,QAAQC,GAAK,IAAM,EAAIC,IAAIF,QAAUE,IAAIF,QAAU,IAAME,IAAIC,YAClF,OAAO,qBAAKC,UAAWL,EAAhB,SAA2BD,EAAME,QAAQK,Q,0BCDvCC,EAAa,SAACR,GACvB,IAAIS,EAAO,YAAcT,EAAMG,GAE/B,OACI,8BACI,cAAC,IAAD,CAASO,GAAID,EAAME,gBAAiBP,IAAIQ,WAAYN,UAAWF,IAAIS,WAAnE,SAAgFb,EAAMc,U,kCCa5FC,EAAmBC,YAAU,CAC/BC,KAAM,WADeD,EAbL,SAAChB,GACjB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAOR,KAAK,iBAAiBS,SAAU,CAACC,SAE9D,8BACI,0DAiEDC,E,2KA9BX,SAAsBC,EAAWC,GAC7B,OAAOC,KAAK5B,OAAS0B,GAAaE,KAAKhC,OAAS+B,I,oBAGpD,WAAU,IAAD,OACDE,EAAkBD,KAAK5B,MAAM8B,WAAWC,SAASC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAS/B,QAAS+B,GAAWA,EAAK9B,OAC/F+B,EAAiBN,KAAK5B,MAAM8B,WAAWK,QAAQH,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAYnB,KAAMmB,EAAKnB,KAAMX,GAAI8B,EAAK9B,IAAS8B,EAAK9B,OAMnH,OAEI,sBAAKG,UAAWF,IAAI+B,QAApB,UACI,qBAAK7B,UAAWF,IAAIgC,aAApB,SACKF,IAEL,gCACI,qBAAK5B,UAAWF,IAAI2B,SAApB,SACKF,IAEL,cAACd,EAAD,CAAkBG,SAdf,SAACmB,GACZ,EAAKrC,MAAMsC,YAAYD,EAASE,6B,GAXtBC,IAAMC,WC7BbC,uBJbiB,SAACD,GAAe,IACtCE,EADqC,4JAEvC,WACI,OAAKf,KAAK5B,MAAMH,QAET,cAAC4C,EAAD,eAAeb,KAAK5B,QADhB,cAAC,IAAD,CAAUU,GAAG,eAJW,GAChB8B,IAAMC,WAOjC,OAAOG,YAAQjD,EAARiD,CAA6BD,KIOpCC,aAfoB,SAAChD,GACrB,MAAO,CACHkC,WAAYlC,EAAMiD,gBAGC,SAACC,GACxB,MAAO,CACHR,YAAa,SAACC,GACVO,EAASC,YAAwBR,SAK9BG,CAGbjB","file":"static/js/4.eddafc56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Qwssn\",\"dialogsItems\":\"Dialogs_dialogsItems__1zIp8\",\"activeItem\":\"Dialogs_activeItem__38U2B\",\"messages\":\"Dialogs_messages__ZvBsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__nWfIo\",\"incomingMsg\":\"Message_incomingMsg__2ZeeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogsItem_dialogItem__BWYD7\",\"activeItem\":\"DialogsItem_activeItem__1ZHBk\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapAuthStateToProps = (state) => ({ isLogin: state.auth.isLogin })\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class AuthRedirect extends React.Component {\r\n        render() {\r\n            if (!this.props.isLogin)\r\n                return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapAuthStateToProps)(AuthRedirect);\r\n}\r\n\r\n\r\n\r\n\r\n","import css from \"./Message.module.css\";\r\n\r\nexport const Message = (props) => {\r\n    var msgStyle = props.message.id % 2 === 0 ? css.message : css.message + ' ' + css.incomingMsg;\r\n    return <div className={msgStyle}>{props.message.text}</div>;\r\n};\r\n","import { NavLink } from \"react-router-dom\";\r\nimport css from \"./DialogsItem.module.css\";\r\n\r\nexport const DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to={path} activeClassName={css.activeItem} className={css.dialogItem}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n","import css from \"./Dialogs.module.css\";\r\nimport { Message } from \"./Message/Message\";\r\nimport { DialogItem } from \"./DialogItem/DialogItem\";\r\nimport React from 'react'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from \"../Common/FormControls\";\r\nimport { required } from \"../Common/Utils/Validators\";\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Input} name='newMessageText' validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ReduxMessageForm = reduxForm({\r\n    form: \"message\"\r\n})(MessageForm);\r\n\r\n// const Dialogs = (props) => {\r\n//     let dialogElements = props.dialogPage.dialogs.map(elem => <DialogItem name={elem.name} id={elem.id} key={elem.id} />)\r\n//     let messageElements = props.dialogPage.messages.map(elem => <Message message={elem} key={elem.id} />)\r\n\r\n//     let onSubmit = (formData) => {\r\n//         props.sendMessage(formData.newMessageText);\r\n//     }\r\n\r\n//     return (\r\n//         <div className={css.dialogs}>\r\n//             <div className={css.dialogsItems}>\r\n//                 {dialogElements}\r\n//             </div>\r\n//             <div>\r\n//                 <div className={css.messages}>\r\n//                     {messageElements}\r\n//                 </div>\r\n//                 <ReduxMessageForm onSubmit={onSubmit} />\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nclass Dialogs extends React.Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props != nextProps || this.state != nextState;\r\n    }\r\n\r\n    render() {\r\n        let messageElements = this.props.dialogPage.messages.map(elem => <Message message={elem} key={elem.id} />)\r\n        let dialogElements = this.props.dialogPage.dialogs.map(elem => <DialogItem name={elem.name} id={elem.id} key={elem.id} />)\r\n \r\n        let onSubmit = (formData) => {\r\n            this.props.sendMessage(formData.newMessageText);\r\n        }\r\n\r\n        return (\r\n\r\n            <div className={css.dialogs}>\r\n                <div className={css.dialogsItems}>\r\n                    {dialogElements}\r\n                </div>\r\n                <div>\r\n                    <div className={css.messages}>\r\n                        {messageElements}\r\n                    </div>\r\n                    <ReduxMessageForm onSubmit={onSubmit} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dialogs","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { newMessageActionCreator } from '../../redux/dialog-reducer'\r\nimport Dialogs from './Dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(newMessageActionCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);"],"sourceRoot":""}